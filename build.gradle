plugins {
    id 'groovy'
    id 'eclipse'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'org.groovymc.modsdotgroovy' version '1.4.1'
}

version = '1.20.x-0.2'
group = 'ga.ozli.minecraftmods.coordints'
base.archivesName = 'coordints'

// Mojang ships Java 17 to end users in 1.18+, so your mod should target Java 17.
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: 'official', version: '1.20'

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg') // Currently, this location cannot be changed from the default.

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        // applies to all run configs
        configureEach {
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'debug'

            mods {
                "${archivesBaseName}" {
                    source sourceSets.main
                }
            }
        }

        client {
            property 'forge.enabledGameTestNamespaces', archivesBaseName
        }

        server {
            property 'forge.enabledGameTestNamespaces', archivesBaseName
            args '--nogui'
        }

        // This run config launches GameTestServer and runs all registered gametests, then exits.
        // By default, the server will crash when no gametests are provided.
        // The gametest system is also enabled by default for other run configs under the /test command.
        gameTestServer {
            property 'forge.enabledGameTestNamespaces', archivesBaseName
        }

        data {
            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', archivesBaseName, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        name = 'Modding Inquisition Releases'
        url = 'https://maven.moddinginquisition.org/releases'
    }
}

dependencies {
    // Forge
    minecraft 'net.minecraftforge:forge:1.20-46.0.14'

    // GroovyModLoader
    compileOnly 'org.groovymc.gml:gml:4.0.2'
    runtimeOnly('org.groovymc.gml:gml:4.0.2:all') {
        exclude module: 'transform'
    }

    // CommonGroovyLibrary (bundled with GML)
    compileOnly 'org.groovymc.cgl:cgl-1.20-forge:0.3.3'
}

// Example for how to get properties into the manifest for reading at runtime.
tasks.named('jar', Jar) {
    manifest {
        attributes([
                'Specification-Title'     : "Coordin'ts",
                'Specification-Vendor'    : 'Paint_Ninja',
                'Specification-Version'   : '1', // We are version 1 of ourselves
                'Implementation-Title'    : archivesBaseName,
                'Implementation-Version'  : archiveVersion,
                'Implementation-Vendor'   : 'Paint_Ninja',
        ])
    }

    reproducibleFileOrder = true
    preserveFileTimestamps = false

    finalizedBy 'reobfJar'
}

tasks.withType(GroovyCompile).configureEach {
    options.incremental = true
    groovyOptions.encoding = 'UTF-8' // Use the UTF-8 charset for Groovy compilation
    groovyOptions.optimizationOptions.indy = true
    groovyOptions.optimizationOptions.groovydoc = true
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

modsDotGroovy {
    dslVersion = '1.5.0'
}
